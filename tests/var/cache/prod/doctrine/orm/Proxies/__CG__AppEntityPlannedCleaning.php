<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PlannedCleaning extends \App\Entity\PlannedCleaning implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'id', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'userid', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'parkingId', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'user_car_id', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'am_pm', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'date', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'transaction_token', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'message', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'duration', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'planned_start', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'planned_end', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'price_paid', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'plannedCleaningOptions', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'produit', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'Provider', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'planings', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'facture', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'valide', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'reduction', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'edited', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'captured', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'supprime', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'from', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'to'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'id', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'userid', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'parkingId', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'user_car_id', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'am_pm', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'date', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'transaction_token', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'message', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'duration', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'planned_start', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'planned_end', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'price_paid', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'plannedCleaningOptions', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'produit', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'Provider', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'planings', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'facture', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'valide', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'reduction', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'edited', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'captured', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'supprime', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'from', '' . "\0" . 'App\\Entity\\PlannedCleaning' . "\0" . 'to'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PlannedCleaning $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCapture(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCapture', []);

        return parent::getCapture();
    }

    /**
     * {@inheritDoc}
     */
    public function setCapture(?bool $captured): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCapture', [$captured]);

        return parent::setCapture($captured);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserid(): ?\App\Entity\MooveeUsers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserid', []);

        return parent::getUserid();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserid(?\App\Entity\MooveeUsers $userid): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserid', [$userid]);

        return parent::setUserid($userid);
    }

    /**
     * {@inheritDoc}
     */
    public function getParkingId(): ?\App\Entity\Parkings
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParkingId', []);

        return parent::getParkingId();
    }

    /**
     * {@inheritDoc}
     */
    public function setParkingId(?\App\Entity\Parkings $parkingId): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParkingId', [$parkingId]);

        return parent::setParkingId($parkingId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserCarId(): ?\App\Entity\MooveeUserHasCar
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserCarId', []);

        return parent::getUserCarId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserCarId(?\App\Entity\MooveeUserHasCar $user_car_id): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserCarId', [$user_car_id]);

        return parent::setUserCarId($user_car_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmPm(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmPm', []);

        return parent::getAmPm();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmPm(string $am_pm): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmPm', [$am_pm]);

        return parent::setAmPm($am_pm);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate(\DateTimeInterface $date): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionToken(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionToken', []);

        return parent::getTransactionToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionToken(string $transaction_token): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionToken', [$transaction_token]);

        return parent::setTransactionToken($transaction_token);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuration(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuration', []);

        return parent::getDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuration(int $duration): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuration', [$duration]);

        return parent::setDuration($duration);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlannedStart(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlannedStart', []);

        return parent::getPlannedStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlannedStart(int $planned_start): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlannedStart', [$planned_start]);

        return parent::setPlannedStart($planned_start);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlannedEnd(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlannedEnd', []);

        return parent::getPlannedEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlannedEnd(int $planned_end): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlannedEnd', [$planned_end]);

        return parent::setPlannedEnd($planned_end);
    }

    /**
     * {@inheritDoc}
     */
    public function getPricePaid(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPricePaid', []);

        return parent::getPricePaid();
    }

    /**
     * {@inheritDoc}
     */
    public function setPricePaid(float $price_paid): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPricePaid', [$price_paid]);

        return parent::setPricePaid($price_paid);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupprime(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupprime', []);

        return parent::getSupprime();
    }

    /**
     * {@inheritDoc}
     */
    public function setSupprime(int $supprime): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupprime', [$supprime]);

        return parent::setSupprime($supprime);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlannedCleaningOptions(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlannedCleaningOptions', []);

        return parent::getPlannedCleaningOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function addPlannedCleaningOption(\App\Entity\PlannedCleaningOptions $plannedCleaningOption): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPlannedCleaningOption', [$plannedCleaningOption]);

        return parent::addPlannedCleaningOption($plannedCleaningOption);
    }

    /**
     * {@inheritDoc}
     */
    public function removePlannedCleaningOption(\App\Entity\PlannedCleaningOptions $plannedCleaningOption): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePlannedCleaningOption', [$plannedCleaningOption]);

        return parent::removePlannedCleaningOption($plannedCleaningOption);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduit(): ?\App\Entity\Products
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduit', []);

        return parent::getProduit();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduit(?\App\Entity\Products $produit): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduit', [$produit]);

        return parent::setProduit($produit);
    }

    /**
     * {@inheritDoc}
     */
    public function getProvider(): ?\App\Entity\Provider
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProvider', []);

        return parent::getProvider();
    }

    /**
     * {@inheritDoc}
     */
    public function setProvider(?\App\Entity\Provider $Provider): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProvider', [$Provider]);

        return parent::setProvider($Provider);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlanings(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlanings', []);

        return parent::getPlanings();
    }

    /**
     * {@inheritDoc}
     */
    public function addPlaning(\App\Entity\Planing $planing): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPlaning', [$planing]);

        return parent::addPlaning($planing);
    }

    /**
     * {@inheritDoc}
     */
    public function removePlaning(\App\Entity\Planing $planing): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePlaning', [$planing]);

        return parent::removePlaning($planing);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacture(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacture', []);

        return parent::getFacture();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacture(?string $facture): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacture', [$facture]);

        return parent::setFacture($facture);
    }

    /**
     * {@inheritDoc}
     */
    public function getValide(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValide', []);

        return parent::getValide();
    }

    /**
     * {@inheritDoc}
     */
    public function setValide(?string $valide): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValide', [$valide]);

        return parent::setValide($valide);
    }

    /**
     * {@inheritDoc}
     */
    public function getReduction(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReduction', []);

        return parent::getReduction();
    }

    /**
     * {@inheritDoc}
     */
    public function setReduction(?string $reduction): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReduction', [$reduction]);

        return parent::setReduction($reduction);
    }

    /**
     * {@inheritDoc}
     */
    public function getEdited(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEdited', []);

        return parent::getEdited();
    }

    /**
     * {@inheritDoc}
     */
    public function setEdited(?int $edited): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEdited', [$edited]);

        return parent::setEdited($edited);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrom(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrom', []);

        return parent::getFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrom(\DateTimeInterface $from): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrom', [$from]);

        return parent::setFrom($from);
    }

    /**
     * {@inheritDoc}
     */
    public function getTo(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTo', []);

        return parent::getTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setTo(\DateTimeInterface $to): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTo', [$to]);

        return parent::setTo($to);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessage', []);

        return parent::getMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessage(string $message): \App\Entity\PlannedCleaning
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessage', [$message]);

        return parent::setMessage($message);
    }

}
