<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'App\Controller\ParkingController' shared autowired service.

include_once $this->targetDirs[3].'/vendor/symfony/framework-bundle/Controller/ControllerTrait.php';
include_once $this->targetDirs[3].'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
include_once $this->targetDirs[3].'/src/Controller/ParkingController.php';

$this->services['App\\Controller\\ParkingController'] = $instance = new \App\Controller\ParkingController(($this->privates['App\\Repository\\MooveeUserHasCarRepository'] ?? $this->load('getMooveeUserHasCarRepositoryService.php')), ($this->privates['App\\Repository\\MooveeCarRepository'] ?? $this->load('getMooveeCarRepositoryService.php')), ($this->privates['App\\Repository\\PlannedCleaningRepository'] ?? $this->load('getPlannedCleaningRepositoryService.php')), ($this->privates['App\\Repository\\AvailabilityRepository'] ?? $this->load('getAvailabilityRepositoryService.php')), ($this->privates['App\\Repository\\ParkingsRepository'] ?? $this->load('getParkingsRepositoryService.php')), ($this->privates['App\\Repository\\MooveeCompanyRepository'] ?? $this->load('getMooveeCompanyRepositoryService.php')), ($this->privates['App\\Repository\\PhotosParkingRepository'] ?? $this->load('getPhotosParkingRepositoryService.php')), ($this->privates['App\\Repository\\MooveeUsersRepository'] ?? $this->load('getMooveeUsersRepositoryService.php')), ($this->privates['App\\Repository\\ProviderRepository'] ?? $this->load('getProviderRepositoryService.php')), ($this->privates['App\\Repository\\CategoryLocationRepository'] ?? $this->load('getCategoryLocationRepositoryService.php')), ($this->privates['App\\Repository\\CategoryProviderRepository'] ?? $this->load('getCategoryProviderRepositoryService.php')), ($this->privates['App\\Repository\\GoogleCalendarApiRepository'] ?? $this->load('getGoogleCalendarApiRepositoryService.php')));

$instance->setContainer(($this->privates['.service_locator.KTVqfp6'] ?? $this->load('get_ServiceLocator_KTVqfp6Service.php'))->withContext('App\\Controller\\ParkingController', $this));

return $instance;
